
Genius2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b92  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  00000b92  00000c26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  00800088  00800088  00000c4e  2**0
                  ALLOC
  3 .stab         00000834  00000000  00000000  00000c50  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000142  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000015c6  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000b8  00000000  00000000  000015f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000e1f  00000000  00000000  000016ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000388  00000000  00000000  000024cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000587  00000000  00000000  00002854  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000274  00000000  00000000  00002ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000260  00000000  00000000  00003050  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001390  00000000  00000000  000032b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000c8  00000000  00000000  00004640  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	dd c0       	rjmp	.+442    	; 0x1c2 <__vector_3>
   8:	ed c0       	rjmp	.+474    	; 0x1e4 <__vector_4>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	0a c1       	rjmp	.+532    	; 0x228 <__vector_9>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 e9       	ldi	r30, 0x92	; 146
  3a:	fb e0       	ldi	r31, 0x0B	; 11
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a8 38       	cpi	r26, 0x88	; 136
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a8 e8       	ldi	r26, 0x88	; 136
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	af 38       	cpi	r26, 0x8F	; 143
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	83 d4       	rcall	.+2310   	; 0x960 <main>
  5a:	99 c5       	rjmp	.+2866   	; 0xb8e <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <escreveNumero>:
// f   b
//   g
// e   c
//   d   p
uint8_t BUFF_D, BUFF_E;
void escreveNumero(int x){
  5e:	0f 93       	push	r16
  60:	1f 93       	push	r17
  62:	cf 93       	push	r28
  64:	df 93       	push	r29
  66:	cd b7       	in	r28, 0x3d	; 61
  68:	de b7       	in	r29, 0x3e	; 62
  6a:	64 97       	sbiw	r28, 0x14	; 20
  6c:	0f b6       	in	r0, 0x3f	; 63
  6e:	f8 94       	cli
  70:	de bf       	out	0x3e, r29	; 62
  72:	0f be       	out	0x3f, r0	; 63
  74:	cd bf       	out	0x3d, r28	; 61
  76:	9c 01       	movw	r18, r24
	uint8_t dig_d[10] = {
  78:	8a e0       	ldi	r24, 0x0A	; 10
  7a:	e4 e6       	ldi	r30, 0x64	; 100
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	de 01       	movw	r26, r28
  80:	11 96       	adiw	r26, 0x01	; 1
  82:	01 90       	ld	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	8a 95       	dec	r24
  88:	e1 f7       	brne	.-8      	; 0x82 <escreveNumero+0x24>
		0b01110111, 0b01000001, 0b00111011, 0b01101011, 0b01001101,
		0b01101110, 0b01111110, 0b01000011, 0b01111111, 0b01101111
	};
	uint8_t dig_e[10] = {
  8a:	8a e0       	ldi	r24, 0x0A	; 10
  8c:	ee e6       	ldi	r30, 0x6E	; 110
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	de 01       	movw	r26, r28
  92:	1b 96       	adiw	r26, 0x0b	; 11
  94:	01 90       	ld	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	8a 95       	dec	r24
  9a:	e1 f7       	brne	.-8      	; 0x94 <escreveNumero+0x36>
		0b11101110, 0b00101000, 0b11001101, 0b01101101, 0b00101011, 
		0b01100111, 0b11100111, 0b00101100, 0b11101111, 0b01101111
	};
	int e, d, p;
	p = x/100;
  9c:	c9 01       	movw	r24, r18
  9e:	64 e6       	ldi	r22, 0x64	; 100
  a0:	70 e0       	ldi	r23, 0x00	; 0
  a2:	84 d4       	rcall	.+2312   	; 0x9ac <__divmodhi4>
  a4:	8b 01       	movw	r16, r22
	e = (x/10)%10;
	d = x%10;
  a6:	ea e0       	ldi	r30, 0x0A	; 10
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	c9 01       	movw	r24, r18
  ac:	bf 01       	movw	r22, r30
  ae:	7e d4       	rcall	.+2300   	; 0x9ac <__divmodhi4>
	BUFF_D = dig_d[d];
  b0:	a1 e0       	ldi	r26, 0x01	; 1
  b2:	b0 e0       	ldi	r27, 0x00	; 0
  b4:	ac 0f       	add	r26, r28
  b6:	bd 1f       	adc	r27, r29
  b8:	a8 0f       	add	r26, r24
  ba:	b9 1f       	adc	r27, r25
  bc:	2c 91       	ld	r18, X
  be:	20 93 89 00 	sts	0x0089, r18
		0b11101110, 0b00101000, 0b11001101, 0b01101101, 0b00101011, 
		0b01100111, 0b11100111, 0b00101100, 0b11101111, 0b01101111
	};
	int e, d, p;
	p = x/100;
	e = (x/10)%10;
  c2:	cb 01       	movw	r24, r22
  c4:	bf 01       	movw	r22, r30
  c6:	72 d4       	rcall	.+2276   	; 0x9ac <__divmodhi4>
	d = x%10;
	BUFF_D = dig_d[d];
	BUFF_E = dig_e[e];
  c8:	fe 01       	movw	r30, r28
  ca:	e8 0f       	add	r30, r24
  cc:	f9 1f       	adc	r31, r25
  ce:	83 85       	ldd	r24, Z+11	; 0x0b
  d0:	80 93 8e 00 	sts	0x008E, r24
	if(p==1)BUFF_D|= 1<<D7S_EP;
  d4:	01 30       	cpi	r16, 0x01	; 1
  d6:	11 05       	cpc	r17, r1
  d8:	21 f4       	brne	.+8      	; 0xe2 <escreveNumero+0x84>
  da:	20 68       	ori	r18, 0x80	; 128
  dc:	20 93 89 00 	sts	0x0089, r18
  e0:	06 c0       	rjmp	.+12     	; 0xee <escreveNumero+0x90>
	if(p==2)BUFF_E|= 1<<D7S_PE;
  e2:	02 30       	cpi	r16, 0x02	; 2
  e4:	11 05       	cpc	r17, r1
  e6:	19 f4       	brne	.+6      	; 0xee <escreveNumero+0x90>
  e8:	80 61       	ori	r24, 0x10	; 16
  ea:	80 93 8e 00 	sts	0x008E, r24
}
  ee:	64 96       	adiw	r28, 0x14	; 20
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	f8 94       	cli
  f4:	de bf       	out	0x3e, r29	; 62
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	cd bf       	out	0x3d, r28	; 61
  fa:	df 91       	pop	r29
  fc:	cf 91       	pop	r28
  fe:	1f 91       	pop	r17
 100:	0f 91       	pop	r16
 102:	08 95       	ret

00000104 <desenhaProgresso>:
void desenhaProgresso(int p){
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62
 10c:	60 97       	sbiw	r28, 0x10	; 16
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	f8 94       	cli
 112:	de bf       	out	0x3e, r29	; 62
 114:	0f be       	out	0x3f, r0	; 63
 116:	cd bf       	out	0x3d, r28	; 61
	if(p==0xFF){
 118:	8f 3f       	cpi	r24, 0xFF	; 255
 11a:	91 05       	cpc	r25, r1
 11c:	29 f4       	brne	.+10     	; 0x128 <desenhaProgresso+0x24>
		BUFF_D = 0;
 11e:	10 92 89 00 	sts	0x0089, r1
		BUFF_E = 0;
 122:	10 92 8e 00 	sts	0x008E, r1
 126:	29 c0       	rjmp	.+82     	; 0x17a <desenhaProgresso+0x76>
		return;
	}
	p = p%8;
 128:	87 70       	andi	r24, 0x07	; 7
 12a:	90 78       	andi	r25, 0x80	; 128
 12c:	99 23       	and	r25, r25
 12e:	24 f4       	brge	.+8      	; 0x138 <desenhaProgresso+0x34>
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	88 6f       	ori	r24, 0xF8	; 248
 134:	9f 6f       	ori	r25, 0xFF	; 255
 136:	01 96       	adiw	r24, 0x01	; 1
	uint8_t es[8] = {0b00000100, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b01000000, 0b10000000, 0b00000010};
 138:	28 e0       	ldi	r18, 0x08	; 8
 13a:	e8 e7       	ldi	r30, 0x78	; 120
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	de 01       	movw	r26, r28
 140:	11 96       	adiw	r26, 0x01	; 1
 142:	01 90       	ld	r0, Z+
 144:	0d 92       	st	X+, r0
 146:	2a 95       	dec	r18
 148:	e1 f7       	brne	.-8      	; 0x142 <desenhaProgresso+0x3e>
	uint8_t ds[8] = {0b00000000, 0b00000010, 0b00000001, 0b01000000, 0b00100000, 0b00000000, 0b00000000, 0b00000000};
 14a:	28 e0       	ldi	r18, 0x08	; 8
 14c:	e0 e8       	ldi	r30, 0x80	; 128
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	de 01       	movw	r26, r28
 152:	19 96       	adiw	r26, 0x09	; 9
 154:	01 90       	ld	r0, Z+
 156:	0d 92       	st	X+, r0
 158:	2a 95       	dec	r18
 15a:	e1 f7       	brne	.-8      	; 0x154 <desenhaProgresso+0x50>
	BUFF_D = ds[p];
 15c:	fe 01       	movw	r30, r28
 15e:	e8 0f       	add	r30, r24
 160:	f9 1f       	adc	r31, r25
 162:	21 85       	ldd	r18, Z+9	; 0x09
 164:	20 93 89 00 	sts	0x0089, r18
	BUFF_E = es[p];
 168:	e1 e0       	ldi	r30, 0x01	; 1
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	ec 0f       	add	r30, r28
 16e:	fd 1f       	adc	r31, r29
 170:	e8 0f       	add	r30, r24
 172:	f9 1f       	adc	r31, r25
 174:	80 81       	ld	r24, Z
 176:	80 93 8e 00 	sts	0x008E, r24
}
 17a:	60 96       	adiw	r28, 0x10	; 16
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	f8 94       	cli
 180:	de bf       	out	0x3e, r29	; 62
 182:	0f be       	out	0x3f, r0	; 63
 184:	cd bf       	out	0x3d, r28	; 61
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <initPorts>:
void initPorts(){
	DDRB = 0b11000011;
 18c:	83 ec       	ldi	r24, 0xC3	; 195
 18e:	87 bb       	out	0x17, r24	; 23
	DDRC = 0b00000011;
 190:	83 e0       	ldi	r24, 0x03	; 3
 192:	84 bb       	out	0x14, r24	; 20
	DDRD = 0b11111111;
 194:	9f ef       	ldi	r25, 0xFF	; 255
 196:	91 bb       	out	0x11, r25	; 17
	SFIOR &= ~(1<<PUD);
 198:	90 b7       	in	r25, 0x30	; 48
 19a:	9b 7f       	andi	r25, 0xFB	; 251
 19c:	90 bf       	out	0x30, r25	; 48
	PORTB = 0b00000011;
 19e:	88 bb       	out	0x18, r24	; 24
	PORTC = 0b00111100;
 1a0:	8c e3       	ldi	r24, 0x3C	; 60
 1a2:	85 bb       	out	0x15, r24	; 21
	PORTD = 0b00000000;
 1a4:	12 ba       	out	0x12, r1	; 18
 1a6:	08 95       	ret

000001a8 <initTimer2>:
}
void initTimer2(){
	TCCR2 = 0b00000110;//8M/256 = 31250 / 256 = 122 int/s
 1a8:	86 e0       	ldi	r24, 0x06	; 6
 1aa:	85 bd       	out	0x25, r24	; 37
	TIMSK |= (1<<TOIE2)|(1<<OCIE2);
 1ac:	89 b7       	in	r24, 0x39	; 57
 1ae:	80 6c       	ori	r24, 0xC0	; 192
 1b0:	89 bf       	out	0x39, r24	; 57
	OCR2 = 128;
 1b2:	80 e8       	ldi	r24, 0x80	; 128
 1b4:	83 bd       	out	0x23, r24	; 35
	BUFF_D = 0;
 1b6:	10 92 89 00 	sts	0x0089, r1
	BUFF_E = 0;
 1ba:	10 92 8e 00 	sts	0x008E, r1
	sei();
 1be:	78 94       	sei
 1c0:	08 95       	ret

000001c2 <__vector_3>:
}

uint8_t PWM[4], COUNT;
#define MAX_PWM 20
ISR(TIMER2_COMP_vect){
 1c2:	1f 92       	push	r1
 1c4:	0f 92       	push	r0
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	0f 92       	push	r0
 1ca:	11 24       	eor	r1, r1
 1cc:	8f 93       	push	r24
	PORTB |= (1<<D7S_ANE);
 1ce:	c1 9a       	sbi	0x18, 1	; 24
	PORTB &= ~(1<<D7S_AND);
 1d0:	c0 98       	cbi	0x18, 0	; 24
	PORTD = BUFF_D;
 1d2:	80 91 89 00 	lds	r24, 0x0089
 1d6:	82 bb       	out	0x12, r24	; 18
}
 1d8:	8f 91       	pop	r24
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <__vector_4>:
ISR(TIMER2_OVF_vect){
 1e4:	1f 92       	push	r1
 1e6:	0f 92       	push	r0
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	0f 92       	push	r0
 1ec:	11 24       	eor	r1, r1
 1ee:	8f 93       	push	r24
	PORTB |= (1<<D7S_AND);
 1f0:	c0 9a       	sbi	0x18, 0	; 24
	PORTB &= ~(1<<D7S_ANE);
 1f2:	c1 98       	cbi	0x18, 1	; 24
	PORTD = BUFF_E;
 1f4:	80 91 8e 00 	lds	r24, 0x008E
 1f8:	82 bb       	out	0x12, r24	; 18
}
 1fa:	8f 91       	pop	r24
 1fc:	0f 90       	pop	r0
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	0f 90       	pop	r0
 202:	1f 90       	pop	r1
 204:	18 95       	reti

00000206 <initTimer0>:
void initTimer0(){
	TCCR0 = 0b00000001;
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0);
 20a:	89 b7       	in	r24, 0x39	; 57
 20c:	81 60       	ori	r24, 0x01	; 1
 20e:	89 bf       	out	0x39, r24	; 57
	PWM[0] = 0;
 210:	10 92 8a 00 	sts	0x008A, r1
	PWM[1] = 0;
 214:	10 92 8b 00 	sts	0x008B, r1
	PWM[2] = 0;
 218:	10 92 8c 00 	sts	0x008C, r1
	PWM[3] = 0;
 21c:	10 92 8d 00 	sts	0x008D, r1
	COUNT = 0;
 220:	10 92 88 00 	sts	0x0088, r1
	sei();
 224:	78 94       	sei
 226:	08 95       	ret

00000228 <__vector_9>:
}
ISR(TIMER0_OVF_vect){
 228:	1f 92       	push	r1
 22a:	0f 92       	push	r0
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	0f 92       	push	r0
 230:	11 24       	eor	r1, r1
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
	COUNT++;
 236:	80 91 88 00 	lds	r24, 0x0088
 23a:	8f 5f       	subi	r24, 0xFF	; 255
	if(COUNT==255){
 23c:	8f 3f       	cpi	r24, 0xFF	; 255
 23e:	19 f0       	breq	.+6      	; 0x246 <__vector_9+0x1e>
	PWM[3] = 0;
	COUNT = 0;
	sei();
}
ISR(TIMER0_OVF_vect){
	COUNT++;
 240:	80 93 88 00 	sts	0x0088, r24
 244:	12 c0       	rjmp	.+36     	; 0x26a <__vector_9+0x42>
	if(COUNT==255){
		COUNT = 0;
 246:	10 92 88 00 	sts	0x0088, r1
		if(PWM[0]>0) PORTB |= (1<<LED_VERDE);
 24a:	80 91 8a 00 	lds	r24, 0x008A
 24e:	81 11       	cpse	r24, r1
 250:	c7 9a       	sbi	0x18, 7	; 24
		if(PWM[1]>0) PORTC |= (1<<LED_VERMELHO);
 252:	80 91 8b 00 	lds	r24, 0x008B
 256:	81 11       	cpse	r24, r1
 258:	a8 9a       	sbi	0x15, 0	; 21
		if(PWM[2]>0) PORTC |= (1<<LED_AZUL);
 25a:	80 91 8c 00 	lds	r24, 0x008C
 25e:	81 11       	cpse	r24, r1
 260:	a9 9a       	sbi	0x15, 1	; 21
		if(PWM[3]>0) PORTB |= (1<<LED_AMARELO);
 262:	80 91 8d 00 	lds	r24, 0x008D
 266:	81 11       	cpse	r24, r1
 268:	c6 9a       	sbi	0x18, 6	; 24
	}
	if(COUNT>PWM[0]) PORTB &= ~(1<<LED_VERDE);
 26a:	90 91 8a 00 	lds	r25, 0x008A
 26e:	80 91 88 00 	lds	r24, 0x0088
 272:	98 17       	cp	r25, r24
 274:	08 f4       	brcc	.+2      	; 0x278 <__vector_9+0x50>
 276:	c7 98       	cbi	0x18, 7	; 24
	if(COUNT>PWM[1]) PORTC &= ~(1<<LED_VERMELHO);
 278:	90 91 8b 00 	lds	r25, 0x008B
 27c:	80 91 88 00 	lds	r24, 0x0088
 280:	98 17       	cp	r25, r24
 282:	08 f4       	brcc	.+2      	; 0x286 <__vector_9+0x5e>
 284:	a8 98       	cbi	0x15, 0	; 21
	if(COUNT>PWM[2]) PORTC &= ~(1<<LED_AZUL);
 286:	90 91 8c 00 	lds	r25, 0x008C
 28a:	80 91 88 00 	lds	r24, 0x0088
 28e:	98 17       	cp	r25, r24
 290:	08 f4       	brcc	.+2      	; 0x294 <__vector_9+0x6c>
 292:	a9 98       	cbi	0x15, 1	; 21
	if(COUNT>PWM[3]) PORTB &= ~(1<<LED_AMARELO);
 294:	90 91 8d 00 	lds	r25, 0x008D
 298:	80 91 88 00 	lds	r24, 0x0088
 29c:	98 17       	cp	r25, r24
 29e:	08 f4       	brcc	.+2      	; 0x2a2 <__vector_9+0x7a>
 2a0:	c6 98       	cbi	0x18, 6	; 24
}
 2a2:	9f 91       	pop	r25
 2a4:	8f 91       	pop	r24
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <getButtonPress>:
uint8_t getButtonPress(int timeout){
	#define BOTAO_VERDE PC2
	#define BOTAO_VERMELHO PC5
	#define BOTAO_AMARELO PC3
	#define BOTAO_AZUL PC4
	uint16_t to = timeout;
 2b0:	28 2f       	mov	r18, r24
 2b2:	39 2f       	mov	r19, r25
	while(to>0){
 2b4:	21 15       	cp	r18, r1
 2b6:	31 05       	cpc	r19, r1
 2b8:	e1 f1       	breq	.+120    	; 0x332 <getButtonPress+0x82>
		if(!(PINC&(1<<BOTAO_VERDE)))   {_delay_ms(20);return 0;}
 2ba:	9a 9b       	sbis	0x13, 2	; 19
 2bc:	09 c0       	rjmp	.+18     	; 0x2d0 <getButtonPress+0x20>
		if(!(PINC&(1<<BOTAO_VERMELHO))){_delay_ms(20);return 1;}
 2be:	9d 9b       	sbis	0x13, 5	; 19
 2c0:	11 c0       	rjmp	.+34     	; 0x2e4 <getButtonPress+0x34>
		if(!(PINC&(1<<BOTAO_AZUL)))    {_delay_ms(20);return 2;}
 2c2:	9c 9b       	sbis	0x13, 4	; 19
 2c4:	19 c0       	rjmp	.+50     	; 0x2f8 <getButtonPress+0x48>
		if(!(PINC&(1<<BOTAO_AMARELO))) {_delay_ms(20);return 3;}
 2c6:	9b 99       	sbic	0x13, 3	; 19
 2c8:	29 c0       	rjmp	.+82     	; 0x31c <getButtonPress+0x6c>
 2ca:	20 c0       	rjmp	.+64     	; 0x30c <getButtonPress+0x5c>
	#define BOTAO_VERMELHO PC5
	#define BOTAO_AMARELO PC3
	#define BOTAO_AZUL PC4
	uint16_t to = timeout;
	while(to>0){
		if(!(PINC&(1<<BOTAO_VERDE)))   {_delay_ms(20);return 0;}
 2cc:	9a 99       	sbic	0x13, 2	; 19
 2ce:	08 c0       	rjmp	.+16     	; 0x2e0 <getButtonPress+0x30>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d0:	8f e1       	ldi	r24, 0x1F	; 31
 2d2:	9e e4       	ldi	r25, 0x4E	; 78
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <getButtonPress+0x24>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <getButtonPress+0x2a>
 2da:	00 00       	nop
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	08 95       	ret
		if(!(PINC&(1<<BOTAO_VERMELHO))){_delay_ms(20);return 1;}
 2e0:	9d 99       	sbic	0x13, 5	; 19
 2e2:	08 c0       	rjmp	.+16     	; 0x2f4 <getButtonPress+0x44>
 2e4:	8f e1       	ldi	r24, 0x1F	; 31
 2e6:	9e e4       	ldi	r25, 0x4E	; 78
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <getButtonPress+0x38>
 2ec:	00 c0       	rjmp	.+0      	; 0x2ee <getButtonPress+0x3e>
 2ee:	00 00       	nop
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	08 95       	ret
		if(!(PINC&(1<<BOTAO_AZUL)))    {_delay_ms(20);return 2;}
 2f4:	9c 99       	sbic	0x13, 4	; 19
 2f6:	08 c0       	rjmp	.+16     	; 0x308 <getButtonPress+0x58>
 2f8:	8f e1       	ldi	r24, 0x1F	; 31
 2fa:	9e e4       	ldi	r25, 0x4E	; 78
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <getButtonPress+0x4c>
 300:	00 c0       	rjmp	.+0      	; 0x302 <getButtonPress+0x52>
 302:	00 00       	nop
 304:	82 e0       	ldi	r24, 0x02	; 2
 306:	08 95       	ret
		if(!(PINC&(1<<BOTAO_AMARELO))) {_delay_ms(20);return 3;}
 308:	9b 99       	sbic	0x13, 3	; 19
 30a:	08 c0       	rjmp	.+16     	; 0x31c <getButtonPress+0x6c>
 30c:	8f e1       	ldi	r24, 0x1F	; 31
 30e:	9e e4       	ldi	r25, 0x4E	; 78
 310:	01 97       	sbiw	r24, 0x01	; 1
 312:	f1 f7       	brne	.-4      	; 0x310 <getButtonPress+0x60>
 314:	00 c0       	rjmp	.+0      	; 0x316 <getButtonPress+0x66>
 316:	00 00       	nop
 318:	83 e0       	ldi	r24, 0x03	; 3
 31a:	08 95       	ret
 31c:	8f e0       	ldi	r24, 0x0F	; 15
 31e:	97 e2       	ldi	r25, 0x27	; 39
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <getButtonPress+0x70>
 324:	00 c0       	rjmp	.+0      	; 0x326 <getButtonPress+0x76>
 326:	00 00       	nop
		_delay_ms(10);
		to--;
 328:	21 50       	subi	r18, 0x01	; 1
 32a:	31 09       	sbc	r19, r1
	#define BOTAO_VERDE PC2
	#define BOTAO_VERMELHO PC5
	#define BOTAO_AMARELO PC3
	#define BOTAO_AZUL PC4
	uint16_t to = timeout;
	while(to>0){
 32c:	79 f6       	brne	.-98     	; 0x2cc <getButtonPress+0x1c>
		if(!(PINC&(1<<BOTAO_AZUL)))    {_delay_ms(20);return 2;}
		if(!(PINC&(1<<BOTAO_AMARELO))) {_delay_ms(20);return 3;}
		_delay_ms(10);
		to--;
	}
	return 0xFF;
 32e:	8f ef       	ldi	r24, 0xFF	; 255
 330:	08 95       	ret
 332:	8f ef       	ldi	r24, 0xFF	; 255
}
 334:	08 95       	ret

00000336 <waitForRelease>:
void waitForRelease(uint8_t button){
	switch(button){
 336:	81 30       	cpi	r24, 0x01	; 1
 338:	61 f0       	breq	.+24     	; 0x352 <waitForRelease+0x1c>
 33a:	70 f0       	brcs	.+28     	; 0x358 <waitForRelease+0x22>
 33c:	82 30       	cpi	r24, 0x02	; 2
 33e:	31 f0       	breq	.+12     	; 0x34c <waitForRelease+0x16>
 340:	83 30       	cpi	r24, 0x03	; 3
 342:	09 f0       	breq	.+2      	; 0x346 <waitForRelease+0x10>
 344:	52 c0       	rjmp	.+164    	; 0x3ea <waitForRelease+0xb4>
		case 2:
			while(!(PINC&(1<<BOTAO_AZUL)))_delay_ms(10);
			_delay_ms(100);
			break;
		case 3:
			while(!(PINC&(1<<BOTAO_AMARELO)))_delay_ms(10);
 346:	9b 9b       	sbis	0x13, 3	; 19
 348:	3f c0       	rjmp	.+126    	; 0x3c8 <waitForRelease+0x92>
 34a:	46 c0       	rjmp	.+140    	; 0x3d8 <waitForRelease+0xa2>
		case 1:
			while(!(PINC&(1<<BOTAO_VERMELHO)))_delay_ms(10);
			_delay_ms(100);
			break;
		case 2:
			while(!(PINC&(1<<BOTAO_AZUL)))_delay_ms(10);
 34c:	9c 9b       	sbis	0x13, 4	; 19
 34e:	2a c0       	rjmp	.+84     	; 0x3a4 <waitForRelease+0x6e>
 350:	31 c0       	rjmp	.+98     	; 0x3b4 <waitForRelease+0x7e>
		case 0:
			while(!(PINC&(1<<BOTAO_VERDE)))_delay_ms(10);
			_delay_ms(100);
			break;
		case 1:
			while(!(PINC&(1<<BOTAO_VERMELHO)))_delay_ms(10);
 352:	9d 9b       	sbis	0x13, 5	; 19
 354:	15 c0       	rjmp	.+42     	; 0x380 <waitForRelease+0x4a>
 356:	1c c0       	rjmp	.+56     	; 0x390 <waitForRelease+0x5a>
	return 0xFF;
}
void waitForRelease(uint8_t button){
	switch(button){
		case 0:
			while(!(PINC&(1<<BOTAO_VERDE)))_delay_ms(10);
 358:	9a 99       	sbic	0x13, 2	; 19
 35a:	08 c0       	rjmp	.+16     	; 0x36c <waitForRelease+0x36>
 35c:	8f e0       	ldi	r24, 0x0F	; 15
 35e:	97 e2       	ldi	r25, 0x27	; 39
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <waitForRelease+0x2a>
 364:	00 c0       	rjmp	.+0      	; 0x366 <waitForRelease+0x30>
 366:	00 00       	nop
 368:	9a 9b       	sbis	0x13, 2	; 19
 36a:	f8 cf       	rjmp	.-16     	; 0x35c <waitForRelease+0x26>
 36c:	9f e7       	ldi	r25, 0x7F	; 127
 36e:	28 e3       	ldi	r18, 0x38	; 56
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	91 50       	subi	r25, 0x01	; 1
 374:	20 40       	sbci	r18, 0x00	; 0
 376:	80 40       	sbci	r24, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <waitForRelease+0x3c>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <waitForRelease+0x46>
 37c:	00 00       	nop
 37e:	08 95       	ret
 380:	8f e0       	ldi	r24, 0x0F	; 15
 382:	97 e2       	ldi	r25, 0x27	; 39
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <waitForRelease+0x4e>
 388:	00 c0       	rjmp	.+0      	; 0x38a <waitForRelease+0x54>
 38a:	00 00       	nop
			_delay_ms(100);
			break;
		case 1:
			while(!(PINC&(1<<BOTAO_VERMELHO)))_delay_ms(10);
 38c:	9d 9b       	sbis	0x13, 5	; 19
 38e:	f8 cf       	rjmp	.-16     	; 0x380 <waitForRelease+0x4a>
 390:	9f e7       	ldi	r25, 0x7F	; 127
 392:	28 e3       	ldi	r18, 0x38	; 56
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	91 50       	subi	r25, 0x01	; 1
 398:	20 40       	sbci	r18, 0x00	; 0
 39a:	80 40       	sbci	r24, 0x00	; 0
 39c:	e1 f7       	brne	.-8      	; 0x396 <waitForRelease+0x60>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <waitForRelease+0x6a>
 3a0:	00 00       	nop
 3a2:	08 95       	ret
 3a4:	8f e0       	ldi	r24, 0x0F	; 15
 3a6:	97 e2       	ldi	r25, 0x27	; 39
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <waitForRelease+0x72>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <waitForRelease+0x78>
 3ae:	00 00       	nop
			_delay_ms(100);
			break;
		case 2:
			while(!(PINC&(1<<BOTAO_AZUL)))_delay_ms(10);
 3b0:	9c 9b       	sbis	0x13, 4	; 19
 3b2:	f8 cf       	rjmp	.-16     	; 0x3a4 <waitForRelease+0x6e>
 3b4:	9f e7       	ldi	r25, 0x7F	; 127
 3b6:	28 e3       	ldi	r18, 0x38	; 56
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	91 50       	subi	r25, 0x01	; 1
 3bc:	20 40       	sbci	r18, 0x00	; 0
 3be:	80 40       	sbci	r24, 0x00	; 0
 3c0:	e1 f7       	brne	.-8      	; 0x3ba <waitForRelease+0x84>
 3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <waitForRelease+0x8e>
 3c4:	00 00       	nop
 3c6:	08 95       	ret
 3c8:	8f e0       	ldi	r24, 0x0F	; 15
 3ca:	97 e2       	ldi	r25, 0x27	; 39
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <waitForRelease+0x96>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <waitForRelease+0x9c>
 3d2:	00 00       	nop
			_delay_ms(100);
			break;
		case 3:
			while(!(PINC&(1<<BOTAO_AMARELO)))_delay_ms(10);
 3d4:	9b 9b       	sbis	0x13, 3	; 19
 3d6:	f8 cf       	rjmp	.-16     	; 0x3c8 <waitForRelease+0x92>
 3d8:	9f e7       	ldi	r25, 0x7F	; 127
 3da:	28 e3       	ldi	r18, 0x38	; 56
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	91 50       	subi	r25, 0x01	; 1
 3e0:	20 40       	sbci	r18, 0x00	; 0
 3e2:	80 40       	sbci	r24, 0x00	; 0
 3e4:	e1 f7       	brne	.-8      	; 0x3de <waitForRelease+0xa8>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <waitForRelease+0xb2>
 3e8:	00 00       	nop
 3ea:	08 95       	ret

000003ec <genius>:
#define WINNER 250
#define VELOCIDADE_ULTIMO 800
#define VELOCIDADE_MAX 400
#define VELOCIDADE_MIN 800
#define VELOCIDADE_MEIO 5000
int genius(){
 3ec:	2f 92       	push	r2
 3ee:	3f 92       	push	r3
 3f0:	4f 92       	push	r4
 3f2:	5f 92       	push	r5
 3f4:	6f 92       	push	r6
 3f6:	7f 92       	push	r7
 3f8:	8f 92       	push	r8
 3fa:	9f 92       	push	r9
 3fc:	af 92       	push	r10
 3fe:	bf 92       	push	r11
 400:	cf 92       	push	r12
 402:	df 92       	push	r13
 404:	ef 92       	push	r14
 406:	ff 92       	push	r15
 408:	0f 93       	push	r16
 40a:	1f 93       	push	r17
 40c:	cf 93       	push	r28
 40e:	df 93       	push	r29
 410:	cd b7       	in	r28, 0x3d	; 61
 412:	de b7       	in	r29, 0x3e	; 62
 414:	ce 5f       	subi	r28, 0xFE	; 254
 416:	d1 09       	sbc	r29, r1
 418:	0f b6       	in	r0, 0x3f	; 63
 41a:	f8 94       	cli
 41c:	de bf       	out	0x3e, r29	; 62
 41e:	0f be       	out	0x3f, r0	; 63
 420:	cd bf       	out	0x3d, r28	; 61
 422:	ee 24       	eor	r14, r14
 424:	e3 94       	inc	r14
 426:	f1 2c       	mov	r15, r1
 428:	ec 0e       	add	r14, r28
 42a:	fd 1e       	adc	r15, r29
 42c:	6e 01       	movw	r12, r28
 42e:	2b ef       	ldi	r18, 0xFB	; 251
 430:	c2 0e       	add	r12, r18
 432:	d1 1c       	adc	r13, r1
 434:	87 01       	movw	r16, r14
	uint8_t vetor[WINNER], perdeu = 0;
	int i, j, k, pont, v;
	for(i=0;i<WINNER;i++)vetor[i] = rand()%4;
 436:	2e d3       	rcall	.+1628   	; 0xa94 <rand>
 438:	83 70       	andi	r24, 0x03	; 3
 43a:	90 78       	andi	r25, 0x80	; 128
 43c:	99 23       	and	r25, r25
 43e:	24 f4       	brge	.+8      	; 0x448 <genius+0x5c>
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	8c 6f       	ori	r24, 0xFC	; 252
 444:	9f 6f       	ori	r25, 0xFF	; 255
 446:	01 96       	adiw	r24, 0x01	; 1
 448:	d8 01       	movw	r26, r16
 44a:	8d 93       	st	X+, r24
 44c:	8d 01       	movw	r16, r26
 44e:	ac 15       	cp	r26, r12
 450:	bd 05       	cpc	r27, r13
 452:	89 f7       	brne	.-30     	; 0x436 <genius+0x4a>
 454:	0f 2e       	mov	r0, r31
 456:	f3 e0       	ldi	r31, 0x03	; 3
 458:	2f 2e       	mov	r2, r31
 45a:	31 2c       	mov	r3, r1
 45c:	f0 2d       	mov	r31, r0
 45e:	00 e2       	ldi	r16, 0x20	; 32
 460:	13 e0       	ldi	r17, 0x03	; 3
		v = VELOCIDADE_MEIO/(pont-1);
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
		for(i=0;i<pont;i++){
			desenhaProgresso(i);
			for(j=0;j<(v>>1);j+=10){
 462:	c3 50       	subi	r28, 0x03	; 3
 464:	df 4f       	sbci	r29, 0xFF	; 255
 466:	e8 82       	st	Y, r14
 468:	cd 5f       	subi	r28, 0xFD	; 253
 46a:	d0 40       	sbci	r29, 0x00	; 0
 46c:	c2 50       	subi	r28, 0x02	; 2
 46e:	df 4f       	sbci	r29, 0xFF	; 255
 470:	f8 82       	st	Y, r15
 472:	ce 5f       	subi	r28, 0xFE	; 254
 474:	d0 40       	sbci	r29, 0x00	; 0
				_delay_ms(10);
			}
			for(j=0;j<(v>>1);j+=10){
				k = ((v>>1)-j)>>1;
				if(k>MAX_PWM)k = MAX_PWM;
				PWM[vetor[i]] = k;
 476:	0f 2e       	mov	r0, r31
 478:	f4 e1       	ldi	r31, 0x14	; 20
 47a:	af 2e       	mov	r10, r31
 47c:	b1 2c       	mov	r11, r1
 47e:	f0 2d       	mov	r31, r0
		v = VELOCIDADE_MEIO/(pont-1);
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
		for(i=0;i<pont;i++){
			desenhaProgresso(i);
			for(j=0;j<(v>>1);j+=10){
 480:	61 2c       	mov	r6, r1
 482:	71 2c       	mov	r7, r1
				_delay_ms(10);
			}
			for(j=0;j<(v>>1);j+=10){
				k = ((v>>1)-j)>>1;
				if(k>MAX_PWM)k = MAX_PWM;
				PWM[vetor[i]] = k;
 484:	8a 2c       	mov	r8, r10
 486:	9b 2c       	mov	r9, r11
				_delay_ms(300);
				PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
				_delay_ms(300);
			}else{
				if(i==pont)escreveNumero(pont+1);
				PWM[j] = MAX_PWM;
 488:	0f 2e       	mov	r0, r31
 48a:	f4 e1       	ldi	r31, 0x14	; 20
 48c:	4f 2e       	mov	r4, r31
 48e:	f0 2d       	mov	r31, r0
 490:	18 c0       	rjmp	.+48     	; 0x4c2 <__stack+0x63>
int genius(){
	uint8_t vetor[WINNER], perdeu = 0;
	int i, j, k, pont, v;
	for(i=0;i<WINNER;i++)vetor[i] = rand()%4;
	for(pont=3 ; pont<WINNER && !perdeu ; pont++){
		v = VELOCIDADE_MEIO/(pont-1);
 492:	88 e8       	ldi	r24, 0x88	; 136
 494:	93 e1       	ldi	r25, 0x13	; 19
 496:	b1 01       	movw	r22, r2
 498:	89 d2       	rcall	.+1298   	; 0x9ac <__divmodhi4>
 49a:	06 2f       	mov	r16, r22
 49c:	17 2f       	mov	r17, r23
 49e:	01 32       	cpi	r16, 0x21	; 33
 4a0:	b3 e0       	ldi	r27, 0x03	; 3
 4a2:	1b 07       	cpc	r17, r27
 4a4:	14 f0       	brlt	.+4      	; 0x4aa <__stack+0x4b>
 4a6:	00 e2       	ldi	r16, 0x20	; 32
 4a8:	13 e0       	ldi	r17, 0x03	; 3
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
 4aa:	00 39       	cpi	r16, 0x90	; 144
 4ac:	e1 e0       	ldi	r30, 0x01	; 1
 4ae:	1e 07       	cpc	r17, r30
 4b0:	14 f4       	brge	.+4      	; 0x4b6 <__stack+0x57>
 4b2:	00 e9       	ldi	r16, 0x90	; 144
 4b4:	11 e0       	ldi	r17, 0x01	; 1
			PWM[vetor[i]] = k;
			_delay_ms(10);
		}
		PWM[vetor[i]] = 0;
		escreveNumero(pont);
		for(i=0;i<pont+1 && !perdeu;i++){
 4b6:	c5 50       	subi	r28, 0x05	; 5
 4b8:	df 4f       	sbci	r29, 0xFF	; 255
 4ba:	28 80       	ld	r2, Y
 4bc:	39 80       	ldd	r3, Y+1	; 0x01
 4be:	cb 5f       	subi	r28, 0xFB	; 251
 4c0:	d0 40       	sbci	r29, 0x00	; 0
	for(i=0;i<WINNER;i++)vetor[i] = rand()%4;
	for(pont=3 ; pont<WINNER && !perdeu ; pont++){
		v = VELOCIDADE_MEIO/(pont-1);
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
		for(i=0;i<pont;i++){
 4c2:	12 14       	cp	r1, r2
 4c4:	13 04       	cpc	r1, r3
 4c6:	0c f0       	brlt	.+2      	; 0x4ca <__stack+0x6b>
 4c8:	5c c0       	rjmp	.+184    	; 0x582 <__stack+0x123>
			desenhaProgresso(i);
			for(j=0;j<(v>>1);j+=10){
 4ca:	15 95       	asr	r17
 4cc:	07 95       	ror	r16
 4ce:	c3 50       	subi	r28, 0x03	; 3
 4d0:	df 4f       	sbci	r29, 0xFF	; 255
 4d2:	e8 80       	ld	r14, Y
 4d4:	cd 5f       	subi	r28, 0xFD	; 253
 4d6:	d0 40       	sbci	r29, 0x00	; 0
 4d8:	c2 50       	subi	r28, 0x02	; 2
 4da:	df 4f       	sbci	r29, 0xFF	; 255
 4dc:	f8 80       	ld	r15, Y
 4de:	ce 5f       	subi	r28, 0xFE	; 254
 4e0:	d0 40       	sbci	r29, 0x00	; 0
	for(i=0;i<WINNER;i++)vetor[i] = rand()%4;
	for(pont=3 ; pont<WINNER && !perdeu ; pont++){
		v = VELOCIDADE_MEIO/(pont-1);
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
		for(i=0;i<pont;i++){
 4e2:	c1 2c       	mov	r12, r1
 4e4:	d1 2c       	mov	r13, r1
			desenhaProgresso(i);
 4e6:	c6 01       	movw	r24, r12
 4e8:	0d de       	rcall	.-998    	; 0x104 <desenhaProgresso>
			for(j=0;j<(v>>1);j+=10){
 4ea:	10 16       	cp	r1, r16
 4ec:	11 06       	cpc	r1, r17
 4ee:	cc f5       	brge	.+114    	; 0x562 <__stack+0x103>
 4f0:	26 2d       	mov	r18, r6
 4f2:	37 2d       	mov	r19, r7
#define WINNER 250
#define VELOCIDADE_ULTIMO 800
#define VELOCIDADE_MAX 400
#define VELOCIDADE_MIN 800
#define VELOCIDADE_MEIO 5000
int genius(){
 4f4:	5e 2d       	mov	r21, r14
 4f6:	4f 2d       	mov	r20, r15
 4f8:	e5 2f       	mov	r30, r21
 4fa:	f4 2f       	mov	r31, r20
		for(i=0;i<pont;i++){
			desenhaProgresso(i);
			for(j=0;j<(v>>1);j+=10){
				k = j>>1;
				if(k>MAX_PWM)k = MAX_PWM;
				PWM[vetor[i]] = k;
 4fc:	d7 01       	movw	r26, r14
 4fe:	8c 91       	ld	r24, X
 500:	a8 2f       	mov	r26, r24
 502:	b0 e0       	ldi	r27, 0x00	; 0
 504:	a6 57       	subi	r26, 0x76	; 118
 506:	bf 4f       	sbci	r27, 0xFF	; 255
 508:	c9 01       	movw	r24, r18
 50a:	95 95       	asr	r25
 50c:	87 95       	ror	r24
 50e:	85 31       	cpi	r24, 0x15	; 21
 510:	91 05       	cpc	r25, r1
 512:	0c f0       	brlt	.+2      	; 0x516 <__stack+0xb7>
 514:	88 2d       	mov	r24, r8
 516:	8c 93       	st	X, r24
 518:	8f e0       	ldi	r24, 0x0F	; 15
 51a:	97 e2       	ldi	r25, 0x27	; 39
 51c:	01 97       	sbiw	r24, 0x01	; 1
 51e:	f1 f7       	brne	.-4      	; 0x51c <__stack+0xbd>
 520:	00 c0       	rjmp	.+0      	; 0x522 <__stack+0xc3>
 522:	00 00       	nop
		v = VELOCIDADE_MEIO/(pont-1);
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
		for(i=0;i<pont;i++){
			desenhaProgresso(i);
			for(j=0;j<(v>>1);j+=10){
 524:	26 5f       	subi	r18, 0xF6	; 246
 526:	3f 4f       	sbci	r19, 0xFF	; 255
 528:	20 17       	cp	r18, r16
 52a:	31 07       	cpc	r19, r17
 52c:	2c f3       	brlt	.-54     	; 0x4f8 <__stack+0x99>
 52e:	86 2d       	mov	r24, r6
 530:	97 2d       	mov	r25, r7
#define WINNER 250
#define VELOCIDADE_ULTIMO 800
#define VELOCIDADE_MAX 400
#define VELOCIDADE_MIN 800
#define VELOCIDADE_MEIO 5000
int genius(){
 532:	98 01       	movw	r18, r16
 534:	28 1b       	sub	r18, r24
 536:	39 0b       	sbc	r19, r25
				_delay_ms(10);
			}
			for(j=0;j<(v>>1);j+=10){
				k = ((v>>1)-j)>>1;
				if(k>MAX_PWM)k = MAX_PWM;
				PWM[vetor[i]] = k;
 538:	a0 81       	ld	r26, Z
 53a:	b0 e0       	ldi	r27, 0x00	; 0
 53c:	a6 57       	subi	r26, 0x76	; 118
 53e:	bf 4f       	sbci	r27, 0xFF	; 255
 540:	35 95       	asr	r19
 542:	27 95       	ror	r18
 544:	25 31       	cpi	r18, 0x15	; 21
 546:	31 05       	cpc	r19, r1
 548:	0c f0       	brlt	.+2      	; 0x54c <__stack+0xed>
 54a:	28 2d       	mov	r18, r8
 54c:	2c 93       	st	X, r18
 54e:	af e0       	ldi	r26, 0x0F	; 15
 550:	b7 e2       	ldi	r27, 0x27	; 39
 552:	11 97       	sbiw	r26, 0x01	; 1
 554:	f1 f7       	brne	.-4      	; 0x552 <__stack+0xf3>
 556:	00 c0       	rjmp	.+0      	; 0x558 <__stack+0xf9>
 558:	00 00       	nop
				k = j>>1;
				if(k>MAX_PWM)k = MAX_PWM;
				PWM[vetor[i]] = k;
				_delay_ms(10);
			}
			for(j=0;j<(v>>1);j+=10){
 55a:	0a 96       	adiw	r24, 0x0a	; 10
 55c:	80 17       	cp	r24, r16
 55e:	91 07       	cpc	r25, r17
 560:	44 f3       	brlt	.-48     	; 0x532 <__stack+0xd3>
				k = ((v>>1)-j)>>1;
				if(k>MAX_PWM)k = MAX_PWM;
				PWM[vetor[i]] = k;
				_delay_ms(10);
			}
			PWM[vetor[i]] = 0;
 562:	d7 01       	movw	r26, r14
 564:	ed 91       	ld	r30, X+
 566:	7d 01       	movw	r14, r26
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	e6 57       	subi	r30, 0x76	; 118
 56c:	ff 4f       	sbci	r31, 0xFF	; 255
 56e:	10 82       	st	Z, r1
	for(i=0;i<WINNER;i++)vetor[i] = rand()%4;
	for(pont=3 ; pont<WINNER && !perdeu ; pont++){
		v = VELOCIDADE_MEIO/(pont-1);
		if(v>VELOCIDADE_MIN)v = VELOCIDADE_MIN;
		if(v<VELOCIDADE_MAX)v = VELOCIDADE_MAX;
		for(i=0;i<pont;i++){
 570:	bf ef       	ldi	r27, 0xFF	; 255
 572:	cb 1a       	sub	r12, r27
 574:	db 0a       	sbc	r13, r27
 576:	c2 14       	cp	r12, r2
 578:	d3 04       	cpc	r13, r3
 57a:	09 f0       	breq	.+2      	; 0x57e <__stack+0x11f>
 57c:	b4 cf       	rjmp	.-152    	; 0x4e6 <__stack+0x87>
 57e:	81 01       	movw	r16, r2
 580:	02 c0       	rjmp	.+4      	; 0x586 <__stack+0x127>
 582:	00 e0       	ldi	r16, 0x00	; 0
 584:	10 e0       	ldi	r17, 0x00	; 0
				PWM[vetor[i]] = k;
				_delay_ms(10);
			}
			PWM[vetor[i]] = 0;
		}
		desenhaProgresso(i);
 586:	c8 01       	movw	r24, r16
 588:	bd dd       	rcall	.-1158   	; 0x104 <desenhaProgresso>
		for(j=0;j<(VELOCIDADE_ULTIMO>>1);j+=10){
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	90 e0       	ldi	r25, 0x00	; 0
			k = j>>1;
			if(k>MAX_PWM)k = MAX_PWM;
			PWM[vetor[i]] = k;
 58e:	a1 e0       	ldi	r26, 0x01	; 1
 590:	b0 e0       	ldi	r27, 0x00	; 0
 592:	ac 0f       	add	r26, r28
 594:	bd 1f       	adc	r27, r29
 596:	a0 0f       	add	r26, r16
 598:	b1 1f       	adc	r27, r17
 59a:	ec 91       	ld	r30, X
 59c:	f0 e0       	ldi	r31, 0x00	; 0
 59e:	e6 57       	subi	r30, 0x76	; 118
 5a0:	ff 4f       	sbci	r31, 0xFF	; 255
 5a2:	9c 01       	movw	r18, r24
 5a4:	35 95       	asr	r19
 5a6:	27 95       	ror	r18
 5a8:	25 31       	cpi	r18, 0x15	; 21
 5aa:	31 05       	cpc	r19, r1
 5ac:	0c f0       	brlt	.+2      	; 0x5b0 <__stack+0x151>
 5ae:	95 01       	movw	r18, r10
 5b0:	20 83       	st	Z, r18
 5b2:	ef e0       	ldi	r30, 0x0F	; 15
 5b4:	f7 e2       	ldi	r31, 0x27	; 39
 5b6:	31 97       	sbiw	r30, 0x01	; 1
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <__stack+0x157>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <__stack+0x15d>
 5bc:	00 00       	nop
				_delay_ms(10);
			}
			PWM[vetor[i]] = 0;
		}
		desenhaProgresso(i);
		for(j=0;j<(VELOCIDADE_ULTIMO>>1);j+=10){
 5be:	0a 96       	adiw	r24, 0x0a	; 10
 5c0:	80 39       	cpi	r24, 0x90	; 144
 5c2:	f1 e0       	ldi	r31, 0x01	; 1
 5c4:	9f 07       	cpc	r25, r31
 5c6:	49 f7       	brne	.-46     	; 0x59a <__stack+0x13b>
 5c8:	80 e9       	ldi	r24, 0x90	; 144
 5ca:	91 e0       	ldi	r25, 0x01	; 1
			_delay_ms(10);
		}
		for(j=0;j<(VELOCIDADE_ULTIMO>>1);j+=10){
			k = ((VELOCIDADE_ULTIMO>>1)-j)>>1;
			if(k>MAX_PWM)k = MAX_PWM;
			PWM[vetor[i]] = k;
 5cc:	a1 e0       	ldi	r26, 0x01	; 1
 5ce:	b0 e0       	ldi	r27, 0x00	; 0
 5d0:	ac 0f       	add	r26, r28
 5d2:	bd 1f       	adc	r27, r29
 5d4:	a0 0f       	add	r26, r16
 5d6:	b1 1f       	adc	r27, r17
 5d8:	ec 91       	ld	r30, X
 5da:	f0 e0       	ldi	r31, 0x00	; 0
 5dc:	e6 57       	subi	r30, 0x76	; 118
 5de:	ff 4f       	sbci	r31, 0xFF	; 255
 5e0:	9c 01       	movw	r18, r24
 5e2:	35 95       	asr	r19
 5e4:	27 95       	ror	r18
 5e6:	25 31       	cpi	r18, 0x15	; 21
 5e8:	31 05       	cpc	r19, r1
 5ea:	0c f0       	brlt	.+2      	; 0x5ee <__stack+0x18f>
 5ec:	95 01       	movw	r18, r10
 5ee:	20 83       	st	Z, r18
 5f0:	ef e0       	ldi	r30, 0x0F	; 15
 5f2:	f7 e2       	ldi	r31, 0x27	; 39
 5f4:	31 97       	sbiw	r30, 0x01	; 1
 5f6:	f1 f7       	brne	.-4      	; 0x5f4 <__stack+0x195>
 5f8:	00 c0       	rjmp	.+0      	; 0x5fa <__stack+0x19b>
 5fa:	00 00       	nop
 5fc:	0a 97       	sbiw	r24, 0x0a	; 10
			k = j>>1;
			if(k>MAX_PWM)k = MAX_PWM;
			PWM[vetor[i]] = k;
			_delay_ms(10);
		}
		for(j=0;j<(VELOCIDADE_ULTIMO>>1);j+=10){
 5fe:	61 f7       	brne	.-40     	; 0x5d8 <__stack+0x179>
			k = ((VELOCIDADE_ULTIMO>>1)-j)>>1;
			if(k>MAX_PWM)k = MAX_PWM;
			PWM[vetor[i]] = k;
			_delay_ms(10);
		}
		PWM[vetor[i]] = 0;
 600:	e1 e0       	ldi	r30, 0x01	; 1
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	ec 0f       	add	r30, r28
 606:	fd 1f       	adc	r31, r29
 608:	e0 0f       	add	r30, r16
 60a:	f1 1f       	adc	r31, r17
 60c:	e0 81       	ld	r30, Z
 60e:	f0 e0       	ldi	r31, 0x00	; 0
 610:	e6 57       	subi	r30, 0x76	; 118
 612:	ff 4f       	sbci	r31, 0xFF	; 255
 614:	10 82       	st	Z, r1
		escreveNumero(pont);
 616:	c1 01       	movw	r24, r2
 618:	22 dd       	rcall	.-1468   	; 0x5e <escreveNumero>
		for(i=0;i<pont+1 && !perdeu;i++){
 61a:	a1 01       	movw	r20, r2
 61c:	4f 5f       	subi	r20, 0xFF	; 255
 61e:	5f 4f       	sbci	r21, 0xFF	; 255
 620:	c5 50       	subi	r28, 0x05	; 5
 622:	df 4f       	sbci	r29, 0xFF	; 255
 624:	59 83       	std	Y+1, r21	; 0x01
 626:	48 83       	st	Y, r20
 628:	cb 5f       	subi	r28, 0xFB	; 251
 62a:	d0 40       	sbci	r29, 0x00	; 0
 62c:	14 16       	cp	r1, r20
 62e:	15 06       	cpc	r1, r21
 630:	0c f0       	brlt	.+2      	; 0x634 <__stack+0x1d5>
 632:	03 c1       	rjmp	.+518    	; 0x83a <__stack+0x3db>
 634:	c3 50       	subi	r28, 0x03	; 3
 636:	df 4f       	sbci	r29, 0xFF	; 255
 638:	e8 80       	ld	r14, Y
 63a:	cd 5f       	subi	r28, 0xFD	; 253
 63c:	d0 40       	sbci	r29, 0x00	; 0
 63e:	c2 50       	subi	r28, 0x02	; 2
 640:	df 4f       	sbci	r29, 0xFF	; 255
 642:	f8 80       	ld	r15, Y
 644:	ce 5f       	subi	r28, 0xFE	; 254
 646:	d0 40       	sbci	r29, 0x00	; 0
 648:	c1 2c       	mov	r12, r1
 64a:	d1 2c       	mov	r13, r1
 64c:	56 2c       	mov	r5, r6
			j = getButtonPress(2000);
 64e:	80 ed       	ldi	r24, 0xD0	; 208
 650:	97 e0       	ldi	r25, 0x07	; 7
 652:	2e de       	rcall	.-932    	; 0x2b0 <getButtonPress>
 654:	68 2e       	mov	r6, r24
 656:	5f e7       	ldi	r21, 0x7F	; 127
 658:	68 e3       	ldi	r22, 0x38	; 56
 65a:	71 e0       	ldi	r23, 0x01	; 1
 65c:	51 50       	subi	r21, 0x01	; 1
 65e:	60 40       	sbci	r22, 0x00	; 0
 660:	70 40       	sbci	r23, 0x00	; 0
 662:	e1 f7       	brne	.-8      	; 0x65c <__stack+0x1fd>
 664:	00 c0       	rjmp	.+0      	; 0x666 <__stack+0x207>
 666:	00 00       	nop
			_delay_ms(100);
			if(j!=vetor[i]){
 668:	d7 01       	movw	r26, r14
 66a:	0d 91       	ld	r16, X+
 66c:	7d 01       	movw	r14, r26
 66e:	10 e0       	ldi	r17, 0x00	; 0
			_delay_ms(10);
		}
		PWM[vetor[i]] = 0;
		escreveNumero(pont);
		for(i=0;i<pont+1 && !perdeu;i++){
			j = getButtonPress(2000);
 670:	90 e0       	ldi	r25, 0x00	; 0
			_delay_ms(100);
			if(j!=vetor[i]){
 672:	08 17       	cp	r16, r24
 674:	19 07       	cpc	r17, r25
 676:	09 f4       	brne	.+2      	; 0x67a <__stack+0x21b>
 678:	b3 c0       	rjmp	.+358    	; 0x7e0 <__stack+0x381>
				perdeu = 1;
				PWM[0]=MAX_PWM;PWM[1]=MAX_PWM;PWM[2]=MAX_PWM;PWM[3]=MAX_PWM;
 67a:	2a e8       	ldi	r18, 0x8A	; 138
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	44 e1       	ldi	r20, 0x14	; 20
 680:	f9 01       	movw	r30, r18
 682:	40 83       	st	Z, r20
 684:	8b e8       	ldi	r24, 0x8B	; 139
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	dc 01       	movw	r26, r24
 68a:	4c 93       	st	X, r20
 68c:	ac e8       	ldi	r26, 0x8C	; 140
 68e:	b0 e0       	ldi	r27, 0x00	; 0
 690:	4c 93       	st	X, r20
 692:	0d e8       	ldi	r16, 0x8D	; 141
 694:	10 e0       	ldi	r17, 0x00	; 0
 696:	f8 01       	movw	r30, r16
 698:	40 83       	st	Z, r20
 69a:	ff e7       	ldi	r31, 0x7F	; 127
 69c:	59 ea       	ldi	r21, 0xA9	; 169
 69e:	63 e0       	ldi	r22, 0x03	; 3
 6a0:	f1 50       	subi	r31, 0x01	; 1
 6a2:	50 40       	sbci	r21, 0x00	; 0
 6a4:	60 40       	sbci	r22, 0x00	; 0
 6a6:	e1 f7       	brne	.-8      	; 0x6a0 <__stack+0x241>
 6a8:	00 c0       	rjmp	.+0      	; 0x6aa <__stack+0x24b>
 6aa:	00 00       	nop
				_delay_ms(300);
				PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 6ac:	f9 01       	movw	r30, r18
 6ae:	10 82       	st	Z, r1
 6b0:	fc 01       	movw	r30, r24
 6b2:	10 82       	st	Z, r1
 6b4:	1c 92       	st	X, r1
 6b6:	f8 01       	movw	r30, r16
 6b8:	10 82       	st	Z, r1
 6ba:	ff e7       	ldi	r31, 0x7F	; 127
 6bc:	59 ea       	ldi	r21, 0xA9	; 169
 6be:	63 e0       	ldi	r22, 0x03	; 3
 6c0:	f1 50       	subi	r31, 0x01	; 1
 6c2:	50 40       	sbci	r21, 0x00	; 0
 6c4:	60 40       	sbci	r22, 0x00	; 0
 6c6:	e1 f7       	brne	.-8      	; 0x6c0 <__stack+0x261>
 6c8:	00 c0       	rjmp	.+0      	; 0x6ca <__stack+0x26b>
 6ca:	00 00       	nop
				_delay_ms(300);
				PWM[0]=MAX_PWM;PWM[1]=MAX_PWM;PWM[2]=MAX_PWM;PWM[3]=MAX_PWM;
 6cc:	f9 01       	movw	r30, r18
 6ce:	40 83       	st	Z, r20
 6d0:	fc 01       	movw	r30, r24
 6d2:	40 83       	st	Z, r20
 6d4:	4c 93       	st	X, r20
 6d6:	f8 01       	movw	r30, r16
 6d8:	40 83       	st	Z, r20
 6da:	ff e7       	ldi	r31, 0x7F	; 127
 6dc:	59 ea       	ldi	r21, 0xA9	; 169
 6de:	63 e0       	ldi	r22, 0x03	; 3
 6e0:	f1 50       	subi	r31, 0x01	; 1
 6e2:	50 40       	sbci	r21, 0x00	; 0
 6e4:	60 40       	sbci	r22, 0x00	; 0
 6e6:	e1 f7       	brne	.-8      	; 0x6e0 <__stack+0x281>
 6e8:	00 c0       	rjmp	.+0      	; 0x6ea <__stack+0x28b>
 6ea:	00 00       	nop
				_delay_ms(300);
				PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 6ec:	f9 01       	movw	r30, r18
 6ee:	10 82       	st	Z, r1
 6f0:	fc 01       	movw	r30, r24
 6f2:	10 82       	st	Z, r1
 6f4:	1c 92       	st	X, r1
 6f6:	f8 01       	movw	r30, r16
 6f8:	10 82       	st	Z, r1
 6fa:	ff e7       	ldi	r31, 0x7F	; 127
 6fc:	59 ea       	ldi	r21, 0xA9	; 169
 6fe:	63 e0       	ldi	r22, 0x03	; 3
 700:	f1 50       	subi	r31, 0x01	; 1
 702:	50 40       	sbci	r21, 0x00	; 0
 704:	60 40       	sbci	r22, 0x00	; 0
 706:	e1 f7       	brne	.-8      	; 0x700 <__stack+0x2a1>
 708:	00 c0       	rjmp	.+0      	; 0x70a <__stack+0x2ab>
 70a:	00 00       	nop
				_delay_ms(300);
				PWM[0]=MAX_PWM;PWM[1]=MAX_PWM;PWM[2]=MAX_PWM;PWM[3]=MAX_PWM;
 70c:	f9 01       	movw	r30, r18
 70e:	40 83       	st	Z, r20
 710:	fc 01       	movw	r30, r24
 712:	40 83       	st	Z, r20
 714:	4c 93       	st	X, r20
 716:	f8 01       	movw	r30, r16
 718:	40 83       	st	Z, r20
 71a:	ff e7       	ldi	r31, 0x7F	; 127
 71c:	59 ea       	ldi	r21, 0xA9	; 169
 71e:	63 e0       	ldi	r22, 0x03	; 3
 720:	f1 50       	subi	r31, 0x01	; 1
 722:	50 40       	sbci	r21, 0x00	; 0
 724:	60 40       	sbci	r22, 0x00	; 0
 726:	e1 f7       	brne	.-8      	; 0x720 <__stack+0x2c1>
 728:	00 c0       	rjmp	.+0      	; 0x72a <__stack+0x2cb>
 72a:	00 00       	nop
				_delay_ms(300);
				PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 72c:	f9 01       	movw	r30, r18
 72e:	10 82       	st	Z, r1
 730:	fc 01       	movw	r30, r24
 732:	10 82       	st	Z, r1
 734:	1c 92       	st	X, r1
 736:	f8 01       	movw	r30, r16
 738:	10 82       	st	Z, r1
 73a:	ff e7       	ldi	r31, 0x7F	; 127
 73c:	59 ea       	ldi	r21, 0xA9	; 169
 73e:	63 e0       	ldi	r22, 0x03	; 3
 740:	f1 50       	subi	r31, 0x01	; 1
 742:	50 40       	sbci	r21, 0x00	; 0
 744:	60 40       	sbci	r22, 0x00	; 0
 746:	e1 f7       	brne	.-8      	; 0x740 <__stack+0x2e1>
 748:	00 c0       	rjmp	.+0      	; 0x74a <__stack+0x2eb>
 74a:	00 00       	nop
				_delay_ms(300);
				PWM[0]=MAX_PWM;PWM[1]=MAX_PWM;PWM[2]=MAX_PWM;PWM[3]=MAX_PWM;
 74c:	f9 01       	movw	r30, r18
 74e:	40 83       	st	Z, r20
 750:	fc 01       	movw	r30, r24
 752:	40 83       	st	Z, r20
 754:	4c 93       	st	X, r20
 756:	f8 01       	movw	r30, r16
 758:	40 83       	st	Z, r20
 75a:	ff e7       	ldi	r31, 0x7F	; 127
 75c:	59 ea       	ldi	r21, 0xA9	; 169
 75e:	63 e0       	ldi	r22, 0x03	; 3
 760:	f1 50       	subi	r31, 0x01	; 1
 762:	50 40       	sbci	r21, 0x00	; 0
 764:	60 40       	sbci	r22, 0x00	; 0
 766:	e1 f7       	brne	.-8      	; 0x760 <__stack+0x301>
 768:	00 c0       	rjmp	.+0      	; 0x76a <__stack+0x30b>
 76a:	00 00       	nop
				_delay_ms(300);
				PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 76c:	f9 01       	movw	r30, r18
 76e:	10 82       	st	Z, r1
 770:	fc 01       	movw	r30, r24
 772:	10 82       	st	Z, r1
 774:	1c 92       	st	X, r1
 776:	f8 01       	movw	r30, r16
 778:	10 82       	st	Z, r1
 77a:	ff e7       	ldi	r31, 0x7F	; 127
 77c:	59 ea       	ldi	r21, 0xA9	; 169
 77e:	63 e0       	ldi	r22, 0x03	; 3
 780:	f1 50       	subi	r31, 0x01	; 1
 782:	50 40       	sbci	r21, 0x00	; 0
 784:	60 40       	sbci	r22, 0x00	; 0
 786:	e1 f7       	brne	.-8      	; 0x780 <__stack+0x321>
 788:	00 c0       	rjmp	.+0      	; 0x78a <__stack+0x32b>
 78a:	00 00       	nop
				_delay_ms(300);
				PWM[0]=MAX_PWM;PWM[1]=MAX_PWM;PWM[2]=MAX_PWM;PWM[3]=MAX_PWM;
 78c:	f9 01       	movw	r30, r18
 78e:	40 83       	st	Z, r20
 790:	fc 01       	movw	r30, r24
 792:	40 83       	st	Z, r20
 794:	4c 93       	st	X, r20
 796:	f8 01       	movw	r30, r16
 798:	40 83       	st	Z, r20
 79a:	ff e7       	ldi	r31, 0x7F	; 127
 79c:	49 ea       	ldi	r20, 0xA9	; 169
 79e:	53 e0       	ldi	r21, 0x03	; 3
 7a0:	f1 50       	subi	r31, 0x01	; 1
 7a2:	40 40       	sbci	r20, 0x00	; 0
 7a4:	50 40       	sbci	r21, 0x00	; 0
 7a6:	e1 f7       	brne	.-8      	; 0x7a0 <__stack+0x341>
 7a8:	00 c0       	rjmp	.+0      	; 0x7aa <__stack+0x34b>
 7aa:	00 00       	nop
				_delay_ms(300);
				PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 7ac:	f9 01       	movw	r30, r18
 7ae:	10 82       	st	Z, r1
 7b0:	fc 01       	movw	r30, r24
 7b2:	10 82       	st	Z, r1
 7b4:	1c 92       	st	X, r1
 7b6:	d8 01       	movw	r26, r16
 7b8:	1c 92       	st	X, r1
 7ba:	bf e7       	ldi	r27, 0x7F	; 127
 7bc:	e9 ea       	ldi	r30, 0xA9	; 169
 7be:	f3 e0       	ldi	r31, 0x03	; 3
 7c0:	b1 50       	subi	r27, 0x01	; 1
 7c2:	e0 40       	sbci	r30, 0x00	; 0
 7c4:	f0 40       	sbci	r31, 0x00	; 0
 7c6:	e1 f7       	brne	.-8      	; 0x7c0 <__stack+0x361>
 7c8:	00 c0       	rjmp	.+0      	; 0x7ca <__stack+0x36b>
 7ca:	00 00       	nop
 7cc:	2f ef       	ldi	r18, 0xFF	; 255
 7ce:	44 e3       	ldi	r20, 0x34	; 52
 7d0:	5c e0       	ldi	r21, 0x0C	; 12
 7d2:	21 50       	subi	r18, 0x01	; 1
 7d4:	40 40       	sbci	r20, 0x00	; 0
 7d6:	50 40       	sbci	r21, 0x00	; 0
 7d8:	e1 f7       	brne	.-8      	; 0x7d2 <__stack+0x373>
 7da:	00 c0       	rjmp	.+0      	; 0x7dc <__stack+0x37d>
 7dc:	00 00       	nop
 7de:	21 c0       	rjmp	.+66     	; 0x822 <__stack+0x3c3>
				_delay_ms(300);
			}else{
				if(i==pont)escreveNumero(pont+1);
 7e0:	c2 14       	cp	r12, r2
 7e2:	d3 04       	cpc	r13, r3
 7e4:	39 f4       	brne	.+14     	; 0x7f4 <__stack+0x395>
 7e6:	c5 50       	subi	r28, 0x05	; 5
 7e8:	df 4f       	sbci	r29, 0xFF	; 255
 7ea:	88 81       	ld	r24, Y
 7ec:	99 81       	ldd	r25, Y+1	; 0x01
 7ee:	cb 5f       	subi	r28, 0xFB	; 251
 7f0:	d0 40       	sbci	r29, 0x00	; 0
 7f2:	35 dc       	rcall	.-1942   	; 0x5e <escreveNumero>
				PWM[j] = MAX_PWM;
 7f4:	06 57       	subi	r16, 0x76	; 118
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	d8 01       	movw	r26, r16
 7fa:	4c 92       	st	X, r4
				waitForRelease(j);
 7fc:	86 2d       	mov	r24, r6
 7fe:	9b dd       	rcall	.-1226   	; 0x336 <waitForRelease>
				PWM[j] = 0;
 800:	f8 01       	movw	r30, r16
 802:	10 82       	st	Z, r1
			PWM[vetor[i]] = k;
			_delay_ms(10);
		}
		PWM[vetor[i]] = 0;
		escreveNumero(pont);
		for(i=0;i<pont+1 && !perdeu;i++){
 804:	ff ef       	ldi	r31, 0xFF	; 255
 806:	cf 1a       	sub	r12, r31
 808:	df 0a       	sbc	r13, r31
 80a:	c5 50       	subi	r28, 0x05	; 5
 80c:	df 4f       	sbci	r29, 0xFF	; 255
 80e:	48 81       	ld	r20, Y
 810:	59 81       	ldd	r21, Y+1	; 0x01
 812:	cb 5f       	subi	r28, 0xFB	; 251
 814:	d0 40       	sbci	r29, 0x00	; 0
 816:	c4 16       	cp	r12, r20
 818:	d5 06       	cpc	r13, r21
 81a:	09 f0       	breq	.+2      	; 0x81e <__stack+0x3bf>
 81c:	18 cf       	rjmp	.-464    	; 0x64e <__stack+0x1ef>
 81e:	65 2c       	mov	r6, r5
 820:	0c c0       	rjmp	.+24     	; 0x83a <__stack+0x3db>
				PWM[j] = 0;
			}
		}
		_delay_ms(1000);
	}
	return pont-1;
 822:	c5 50       	subi	r28, 0x05	; 5
 824:	df 4f       	sbci	r29, 0xFF	; 255
 826:	a8 80       	ld	r10, Y
 828:	b9 80       	ldd	r11, Y+1	; 0x01
 82a:	cb 5f       	subi	r28, 0xFB	; 251
 82c:	d0 40       	sbci	r29, 0x00	; 0
 82e:	51 e0       	ldi	r21, 0x01	; 1
 830:	a5 1a       	sub	r10, r21
 832:	b1 08       	sbc	r11, r1
 834:	8a 2d       	mov	r24, r10
 836:	9b 2d       	mov	r25, r11
 838:	14 c0       	rjmp	.+40     	; 0x862 <__stack+0x403>
 83a:	6f ef       	ldi	r22, 0xFF	; 255
 83c:	74 e3       	ldi	r23, 0x34	; 52
 83e:	8c e0       	ldi	r24, 0x0C	; 12
 840:	61 50       	subi	r22, 0x01	; 1
 842:	70 40       	sbci	r23, 0x00	; 0
 844:	80 40       	sbci	r24, 0x00	; 0
 846:	e1 f7       	brne	.-8      	; 0x840 <__stack+0x3e1>
 848:	00 c0       	rjmp	.+0      	; 0x84a <__stack+0x3eb>
 84a:	00 00       	nop
#define VELOCIDADE_MEIO 5000
int genius(){
	uint8_t vetor[WINNER], perdeu = 0;
	int i, j, k, pont, v;
	for(i=0;i<WINNER;i++)vetor[i] = rand()%4;
	for(pont=3 ; pont<WINNER && !perdeu ; pont++){
 84c:	c5 50       	subi	r28, 0x05	; 5
 84e:	df 4f       	sbci	r29, 0xFF	; 255
 850:	a8 81       	ld	r26, Y
 852:	b9 81       	ldd	r27, Y+1	; 0x01
 854:	cb 5f       	subi	r28, 0xFB	; 251
 856:	d0 40       	sbci	r29, 0x00	; 0
 858:	aa 3f       	cpi	r26, 0xFA	; 250
 85a:	b1 05       	cpc	r27, r1
 85c:	09 f0       	breq	.+2      	; 0x860 <__stack+0x401>
 85e:	19 ce       	rjmp	.-974    	; 0x492 <__stack+0x33>
 860:	e0 cf       	rjmp	.-64     	; 0x822 <__stack+0x3c3>
			}
		}
		_delay_ms(1000);
	}
	return pont-1;
}
 862:	c2 50       	subi	r28, 0x02	; 2
 864:	df 4f       	sbci	r29, 0xFF	; 255
 866:	0f b6       	in	r0, 0x3f	; 63
 868:	f8 94       	cli
 86a:	de bf       	out	0x3e, r29	; 62
 86c:	0f be       	out	0x3f, r0	; 63
 86e:	cd bf       	out	0x3d, r28	; 61
 870:	df 91       	pop	r29
 872:	cf 91       	pop	r28
 874:	1f 91       	pop	r17
 876:	0f 91       	pop	r16
 878:	ff 90       	pop	r15
 87a:	ef 90       	pop	r14
 87c:	df 90       	pop	r13
 87e:	cf 90       	pop	r12
 880:	bf 90       	pop	r11
 882:	af 90       	pop	r10
 884:	9f 90       	pop	r9
 886:	8f 90       	pop	r8
 888:	7f 90       	pop	r7
 88a:	6f 90       	pop	r6
 88c:	5f 90       	pop	r5
 88e:	4f 90       	pop	r4
 890:	3f 90       	pop	r3
 892:	2f 90       	pop	r2
 894:	08 95       	ret

00000896 <idle>:
int idle(){
 896:	7f 92       	push	r7
 898:	8f 92       	push	r8
 89a:	9f 92       	push	r9
 89c:	af 92       	push	r10
 89e:	bf 92       	push	r11
 8a0:	cf 92       	push	r12
 8a2:	df 92       	push	r13
 8a4:	ef 92       	push	r14
 8a6:	ff 92       	push	r15
 8a8:	0f 93       	push	r16
 8aa:	1f 93       	push	r17
 8ac:	cf 93       	push	r28
 8ae:	df 93       	push	r29
	int gira = 0, b;
 8b0:	a1 2c       	mov	r10, r1
 8b2:	b1 2c       	mov	r11, r1
	while(1){
		b = getButtonPress(30);
		if(b==0xFF){
			gira++;
			PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 8b4:	0f 2e       	mov	r0, r31
 8b6:	fa e8       	ldi	r31, 0x8A	; 138
 8b8:	cf 2e       	mov	r12, r31
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	df 2e       	mov	r13, r31
 8be:	f0 2d       	mov	r31, r0
 8c0:	0f 2e       	mov	r0, r31
 8c2:	fb e8       	ldi	r31, 0x8B	; 139
 8c4:	ef 2e       	mov	r14, r31
 8c6:	f0 e0       	ldi	r31, 0x00	; 0
 8c8:	ff 2e       	mov	r15, r31
 8ca:	f0 2d       	mov	r31, r0
 8cc:	0c e8       	ldi	r16, 0x8C	; 140
 8ce:	10 e0       	ldi	r17, 0x00	; 0
 8d0:	cd e8       	ldi	r28, 0x8D	; 141
 8d2:	d0 e0       	ldi	r29, 0x00	; 0
			PWM[gira%4]=MAX_PWM;
 8d4:	0f 2e       	mov	r0, r31
 8d6:	f4 e1       	ldi	r31, 0x14	; 20
 8d8:	7f 2e       	mov	r7, r31
 8da:	f0 2d       	mov	r31, r0
	return pont-1;
}
int idle(){
	int gira = 0, b;
	while(1){
		b = getButtonPress(30);
 8dc:	8e e1       	ldi	r24, 0x1E	; 30
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	e7 dc       	rcall	.-1586   	; 0x2b0 <getButtonPress>
 8e2:	88 2e       	mov	r8, r24
 8e4:	91 2c       	mov	r9, r1
		if(b==0xFF){
 8e6:	9f ef       	ldi	r25, 0xFF	; 255
 8e8:	89 16       	cp	r8, r25
 8ea:	91 04       	cpc	r9, r1
 8ec:	d1 f4       	brne	.+52     	; 0x922 <idle+0x8c>
			gira++;
 8ee:	ef ef       	ldi	r30, 0xFF	; 255
 8f0:	ae 1a       	sub	r10, r30
 8f2:	be 0a       	sbc	r11, r30
			PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 8f4:	f6 01       	movw	r30, r12
 8f6:	10 82       	st	Z, r1
 8f8:	f7 01       	movw	r30, r14
 8fa:	10 82       	st	Z, r1
 8fc:	f8 01       	movw	r30, r16
 8fe:	10 82       	st	Z, r1
 900:	18 82       	st	Y, r1
			PWM[gira%4]=MAX_PWM;
 902:	95 01       	movw	r18, r10
 904:	23 70       	andi	r18, 0x03	; 3
 906:	30 78       	andi	r19, 0x80	; 128
 908:	33 23       	and	r19, r19
 90a:	34 f4       	brge	.+12     	; 0x918 <idle+0x82>
 90c:	21 50       	subi	r18, 0x01	; 1
 90e:	31 09       	sbc	r19, r1
 910:	2c 6f       	ori	r18, 0xFC	; 252
 912:	3f 6f       	ori	r19, 0xFF	; 255
 914:	2f 5f       	subi	r18, 0xFF	; 255
 916:	3f 4f       	sbci	r19, 0xFF	; 255
 918:	f9 01       	movw	r30, r18
 91a:	e6 57       	subi	r30, 0x76	; 118
 91c:	ff 4f       	sbci	r31, 0xFF	; 255
 91e:	70 82       	st	Z, r7
		}else{
			PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
			waitForRelease(b);
			return (gira<<2)+b;
		}
	}
 920:	dd cf       	rjmp	.-70     	; 0x8dc <idle+0x46>
		if(b==0xFF){
			gira++;
			PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
			PWM[gira%4]=MAX_PWM;
		}else{
			PWM[0]=0;PWM[1]=0;PWM[2]=0;PWM[3]=0;
 922:	10 92 8a 00 	sts	0x008A, r1
 926:	10 92 8b 00 	sts	0x008B, r1
 92a:	10 92 8c 00 	sts	0x008C, r1
 92e:	10 92 8d 00 	sts	0x008D, r1
			waitForRelease(b);
 932:	01 dd       	rcall	.-1534   	; 0x336 <waitForRelease>
			return (gira<<2)+b;
 934:	aa 0c       	add	r10, r10
 936:	bb 1c       	adc	r11, r11
 938:	aa 0c       	add	r10, r10
 93a:	bb 1c       	adc	r11, r11
 93c:	8a 0c       	add	r8, r10
 93e:	9b 1c       	adc	r9, r11
		}
	}
}
 940:	88 2d       	mov	r24, r8
 942:	99 2d       	mov	r25, r9
 944:	df 91       	pop	r29
 946:	cf 91       	pop	r28
 948:	1f 91       	pop	r17
 94a:	0f 91       	pop	r16
 94c:	ff 90       	pop	r15
 94e:	ef 90       	pop	r14
 950:	df 90       	pop	r13
 952:	cf 90       	pop	r12
 954:	bf 90       	pop	r11
 956:	af 90       	pop	r10
 958:	9f 90       	pop	r9
 95a:	8f 90       	pop	r8
 95c:	7f 90       	pop	r7
 95e:	08 95       	ret

00000960 <main>:


int main(void){
	int pontuacao, maxima;
	initPorts();
 960:	15 dc       	rcall	.-2006   	; 0x18c <initPorts>
	initTimer0();
 962:	51 dc       	rcall	.-1886   	; 0x206 <initTimer0>
	initTimer2();
 964:	21 dc       	rcall	.-1982   	; 0x1a8 <initTimer2>
	maxima = eeprom_read_byte(0); 
 966:	80 e0       	ldi	r24, 0x00	; 0
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	a3 d0       	rcall	.+326    	; 0xab2 <__eerd_byte_m8>
 96c:	08 2f       	mov	r16, r24
 96e:	10 e0       	ldi	r17, 0x00	; 0
	if(maxima<3 || maxima==0xFF){
 970:	03 30       	cpi	r16, 0x03	; 3
 972:	11 05       	cpc	r17, r1
 974:	1c f0       	brlt	.+6      	; 0x97c <main+0x1c>
 976:	0f 3f       	cpi	r16, 0xFF	; 255
 978:	11 05       	cpc	r17, r1
 97a:	31 f4       	brne	.+12     	; 0x988 <main+0x28>
		maxima = 3;
		eeprom_write_byte(0,maxima);
 97c:	63 e0       	ldi	r22, 0x03	; 3
 97e:	80 e0       	ldi	r24, 0x00	; 0
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	9f d0       	rcall	.+318    	; 0xac2 <__eewr_byte_m8>
	initPorts();
	initTimer0();
	initTimer2();
	maxima = eeprom_read_byte(0); 
	if(maxima<3 || maxima==0xFF){
		maxima = 3;
 984:	03 e0       	ldi	r16, 0x03	; 3
 986:	10 e0       	ldi	r17, 0x00	; 0
		eeprom_write_byte(0,maxima);
	}
	escreveNumero(maxima);
 988:	c8 01       	movw	r24, r16
 98a:	69 db       	rcall	.-2350   	; 0x5e <escreveNumero>
	srand(idle());
 98c:	84 df       	rcall	.-248    	; 0x896 <idle>
 98e:	86 d0       	rcall	.+268    	; 0xa9c <srand>
	while(1){
		pontuacao = genius();
 990:	2d dd       	rcall	.-1446   	; 0x3ec <genius>
 992:	ec 01       	movw	r28, r24
		if(pontuacao>maxima){
 994:	08 17       	cp	r16, r24
 996:	19 07       	cpc	r17, r25
 998:	2c f4       	brge	.+10     	; 0x9a4 <main+0x44>
			maxima = pontuacao;
			eeprom_write_byte(0,maxima);
 99a:	68 2f       	mov	r22, r24
 99c:	80 e0       	ldi	r24, 0x00	; 0
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	90 d0       	rcall	.+288    	; 0xac2 <__eewr_byte_m8>
	escreveNumero(maxima);
	srand(idle());
	while(1){
		pontuacao = genius();
		if(pontuacao>maxima){
			maxima = pontuacao;
 9a2:	8e 01       	movw	r16, r28
			eeprom_write_byte(0,maxima);
		}
		escreveNumero(maxima);
 9a4:	c8 01       	movw	r24, r16
 9a6:	5b db       	rcall	.-2378   	; 0x5e <escreveNumero>
		idle();
 9a8:	76 df       	rcall	.-276    	; 0x896 <idle>
	}
 9aa:	f2 cf       	rjmp	.-28     	; 0x990 <main+0x30>

000009ac <__divmodhi4>:
 9ac:	97 fb       	bst	r25, 7
 9ae:	07 2e       	mov	r0, r23
 9b0:	16 f4       	brtc	.+4      	; 0x9b6 <__divmodhi4+0xa>
 9b2:	00 94       	com	r0
 9b4:	06 d0       	rcall	.+12     	; 0x9c2 <__divmodhi4_neg1>
 9b6:	77 fd       	sbrc	r23, 7
 9b8:	08 d0       	rcall	.+16     	; 0x9ca <__divmodhi4_neg2>
 9ba:	0b d0       	rcall	.+22     	; 0x9d2 <__udivmodhi4>
 9bc:	07 fc       	sbrc	r0, 7
 9be:	05 d0       	rcall	.+10     	; 0x9ca <__divmodhi4_neg2>
 9c0:	3e f4       	brtc	.+14     	; 0x9d0 <__divmodhi4_exit>

000009c2 <__divmodhi4_neg1>:
 9c2:	90 95       	com	r25
 9c4:	81 95       	neg	r24
 9c6:	9f 4f       	sbci	r25, 0xFF	; 255
 9c8:	08 95       	ret

000009ca <__divmodhi4_neg2>:
 9ca:	70 95       	com	r23
 9cc:	61 95       	neg	r22
 9ce:	7f 4f       	sbci	r23, 0xFF	; 255

000009d0 <__divmodhi4_exit>:
 9d0:	08 95       	ret

000009d2 <__udivmodhi4>:
 9d2:	aa 1b       	sub	r26, r26
 9d4:	bb 1b       	sub	r27, r27
 9d6:	51 e1       	ldi	r21, 0x11	; 17
 9d8:	07 c0       	rjmp	.+14     	; 0x9e8 <__udivmodhi4_ep>

000009da <__udivmodhi4_loop>:
 9da:	aa 1f       	adc	r26, r26
 9dc:	bb 1f       	adc	r27, r27
 9de:	a6 17       	cp	r26, r22
 9e0:	b7 07       	cpc	r27, r23
 9e2:	10 f0       	brcs	.+4      	; 0x9e8 <__udivmodhi4_ep>
 9e4:	a6 1b       	sub	r26, r22
 9e6:	b7 0b       	sbc	r27, r23

000009e8 <__udivmodhi4_ep>:
 9e8:	88 1f       	adc	r24, r24
 9ea:	99 1f       	adc	r25, r25
 9ec:	5a 95       	dec	r21
 9ee:	a9 f7       	brne	.-22     	; 0x9da <__udivmodhi4_loop>
 9f0:	80 95       	com	r24
 9f2:	90 95       	com	r25
 9f4:	bc 01       	movw	r22, r24
 9f6:	cd 01       	movw	r24, r26
 9f8:	08 95       	ret

000009fa <do_rand>:
 9fa:	8f 92       	push	r8
 9fc:	9f 92       	push	r9
 9fe:	af 92       	push	r10
 a00:	bf 92       	push	r11
 a02:	cf 92       	push	r12
 a04:	df 92       	push	r13
 a06:	ef 92       	push	r14
 a08:	ff 92       	push	r15
 a0a:	cf 93       	push	r28
 a0c:	df 93       	push	r29
 a0e:	ec 01       	movw	r28, r24
 a10:	68 81       	ld	r22, Y
 a12:	79 81       	ldd	r23, Y+1	; 0x01
 a14:	8a 81       	ldd	r24, Y+2	; 0x02
 a16:	9b 81       	ldd	r25, Y+3	; 0x03
 a18:	61 15       	cp	r22, r1
 a1a:	71 05       	cpc	r23, r1
 a1c:	81 05       	cpc	r24, r1
 a1e:	91 05       	cpc	r25, r1
 a20:	21 f4       	brne	.+8      	; 0xa2a <do_rand+0x30>
 a22:	64 e2       	ldi	r22, 0x24	; 36
 a24:	79 ed       	ldi	r23, 0xD9	; 217
 a26:	8b e5       	ldi	r24, 0x5B	; 91
 a28:	97 e0       	ldi	r25, 0x07	; 7
 a2a:	2d e1       	ldi	r18, 0x1D	; 29
 a2c:	33 ef       	ldi	r19, 0xF3	; 243
 a2e:	41 e0       	ldi	r20, 0x01	; 1
 a30:	50 e0       	ldi	r21, 0x00	; 0
 a32:	54 d0       	rcall	.+168    	; 0xadc <__divmodsi4>
 a34:	49 01       	movw	r8, r18
 a36:	5a 01       	movw	r10, r20
 a38:	9b 01       	movw	r18, r22
 a3a:	ac 01       	movw	r20, r24
 a3c:	a7 ea       	ldi	r26, 0xA7	; 167
 a3e:	b1 e4       	ldi	r27, 0x41	; 65
 a40:	68 d0       	rcall	.+208    	; 0xb12 <__muluhisi3>
 a42:	6b 01       	movw	r12, r22
 a44:	7c 01       	movw	r14, r24
 a46:	ac ee       	ldi	r26, 0xEC	; 236
 a48:	b4 ef       	ldi	r27, 0xF4	; 244
 a4a:	a5 01       	movw	r20, r10
 a4c:	94 01       	movw	r18, r8
 a4e:	6d d0       	rcall	.+218    	; 0xb2a <__mulohisi3>
 a50:	c6 0e       	add	r12, r22
 a52:	d7 1e       	adc	r13, r23
 a54:	e8 1e       	adc	r14, r24
 a56:	f9 1e       	adc	r15, r25
 a58:	f7 fe       	sbrs	r15, 7
 a5a:	06 c0       	rjmp	.+12     	; 0xa68 <do_rand+0x6e>
 a5c:	81 e0       	ldi	r24, 0x01	; 1
 a5e:	c8 1a       	sub	r12, r24
 a60:	d1 08       	sbc	r13, r1
 a62:	e1 08       	sbc	r14, r1
 a64:	80 e8       	ldi	r24, 0x80	; 128
 a66:	f8 0a       	sbc	r15, r24
 a68:	c8 82       	st	Y, r12
 a6a:	d9 82       	std	Y+1, r13	; 0x01
 a6c:	ea 82       	std	Y+2, r14	; 0x02
 a6e:	fb 82       	std	Y+3, r15	; 0x03
 a70:	e8 94       	clt
 a72:	d7 f8       	bld	r13, 7
 a74:	ee 24       	eor	r14, r14
 a76:	ff 24       	eor	r15, r15
 a78:	c6 01       	movw	r24, r12
 a7a:	df 91       	pop	r29
 a7c:	cf 91       	pop	r28
 a7e:	ff 90       	pop	r15
 a80:	ef 90       	pop	r14
 a82:	df 90       	pop	r13
 a84:	cf 90       	pop	r12
 a86:	bf 90       	pop	r11
 a88:	af 90       	pop	r10
 a8a:	9f 90       	pop	r9
 a8c:	8f 90       	pop	r8
 a8e:	08 95       	ret

00000a90 <rand_r>:
 a90:	b4 df       	rcall	.-152    	; 0x9fa <do_rand>
 a92:	08 95       	ret

00000a94 <rand>:
 a94:	80 e6       	ldi	r24, 0x60	; 96
 a96:	90 e0       	ldi	r25, 0x00	; 0
 a98:	b0 df       	rcall	.-160    	; 0x9fa <do_rand>
 a9a:	08 95       	ret

00000a9c <srand>:
 a9c:	a0 e0       	ldi	r26, 0x00	; 0
 a9e:	b0 e0       	ldi	r27, 0x00	; 0
 aa0:	80 93 60 00 	sts	0x0060, r24
 aa4:	90 93 61 00 	sts	0x0061, r25
 aa8:	a0 93 62 00 	sts	0x0062, r26
 aac:	b0 93 63 00 	sts	0x0063, r27
 ab0:	08 95       	ret

00000ab2 <__eerd_byte_m8>:
 ab2:	e1 99       	sbic	0x1c, 1	; 28
 ab4:	fe cf       	rjmp	.-4      	; 0xab2 <__eerd_byte_m8>
 ab6:	9f bb       	out	0x1f, r25	; 31
 ab8:	8e bb       	out	0x1e, r24	; 30
 aba:	e0 9a       	sbi	0x1c, 0	; 28
 abc:	99 27       	eor	r25, r25
 abe:	8d b3       	in	r24, 0x1d	; 29
 ac0:	08 95       	ret

00000ac2 <__eewr_byte_m8>:
 ac2:	26 2f       	mov	r18, r22

00000ac4 <__eewr_r18_m8>:
 ac4:	e1 99       	sbic	0x1c, 1	; 28
 ac6:	fe cf       	rjmp	.-4      	; 0xac4 <__eewr_r18_m8>
 ac8:	9f bb       	out	0x1f, r25	; 31
 aca:	8e bb       	out	0x1e, r24	; 30
 acc:	2d bb       	out	0x1d, r18	; 29
 ace:	0f b6       	in	r0, 0x3f	; 63
 ad0:	f8 94       	cli
 ad2:	e2 9a       	sbi	0x1c, 2	; 28
 ad4:	e1 9a       	sbi	0x1c, 1	; 28
 ad6:	0f be       	out	0x3f, r0	; 63
 ad8:	01 96       	adiw	r24, 0x01	; 1
 ada:	08 95       	ret

00000adc <__divmodsi4>:
 adc:	05 2e       	mov	r0, r21
 ade:	97 fb       	bst	r25, 7
 ae0:	16 f4       	brtc	.+4      	; 0xae6 <__divmodsi4+0xa>
 ae2:	00 94       	com	r0
 ae4:	06 d0       	rcall	.+12     	; 0xaf2 <__divmodsi4_neg1>
 ae6:	57 fd       	sbrc	r21, 7
 ae8:	0c d0       	rcall	.+24     	; 0xb02 <__divmodsi4_neg2>
 aea:	23 d0       	rcall	.+70     	; 0xb32 <__udivmodsi4>
 aec:	07 fc       	sbrc	r0, 7
 aee:	09 d0       	rcall	.+18     	; 0xb02 <__divmodsi4_neg2>
 af0:	7e f4       	brtc	.+30     	; 0xb10 <__divmodsi4_exit>

00000af2 <__divmodsi4_neg1>:
 af2:	90 95       	com	r25
 af4:	80 95       	com	r24
 af6:	70 95       	com	r23
 af8:	61 95       	neg	r22
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	08 95       	ret

00000b02 <__divmodsi4_neg2>:
 b02:	50 95       	com	r21
 b04:	40 95       	com	r20
 b06:	30 95       	com	r19
 b08:	21 95       	neg	r18
 b0a:	3f 4f       	sbci	r19, 0xFF	; 255
 b0c:	4f 4f       	sbci	r20, 0xFF	; 255
 b0e:	5f 4f       	sbci	r21, 0xFF	; 255

00000b10 <__divmodsi4_exit>:
 b10:	08 95       	ret

00000b12 <__muluhisi3>:
 b12:	31 d0       	rcall	.+98     	; 0xb76 <__umulhisi3>
 b14:	a5 9f       	mul	r26, r21
 b16:	90 0d       	add	r25, r0
 b18:	b4 9f       	mul	r27, r20
 b1a:	90 0d       	add	r25, r0
 b1c:	a4 9f       	mul	r26, r20
 b1e:	80 0d       	add	r24, r0
 b20:	91 1d       	adc	r25, r1
 b22:	11 24       	eor	r1, r1
 b24:	08 95       	ret

00000b26 <__mulshisi3>:
 b26:	b7 ff       	sbrs	r27, 7
 b28:	f4 cf       	rjmp	.-24     	; 0xb12 <__muluhisi3>

00000b2a <__mulohisi3>:
 b2a:	f3 df       	rcall	.-26     	; 0xb12 <__muluhisi3>
 b2c:	82 1b       	sub	r24, r18
 b2e:	93 0b       	sbc	r25, r19
 b30:	08 95       	ret

00000b32 <__udivmodsi4>:
 b32:	a1 e2       	ldi	r26, 0x21	; 33
 b34:	1a 2e       	mov	r1, r26
 b36:	aa 1b       	sub	r26, r26
 b38:	bb 1b       	sub	r27, r27
 b3a:	fd 01       	movw	r30, r26
 b3c:	0d c0       	rjmp	.+26     	; 0xb58 <__udivmodsi4_ep>

00000b3e <__udivmodsi4_loop>:
 b3e:	aa 1f       	adc	r26, r26
 b40:	bb 1f       	adc	r27, r27
 b42:	ee 1f       	adc	r30, r30
 b44:	ff 1f       	adc	r31, r31
 b46:	a2 17       	cp	r26, r18
 b48:	b3 07       	cpc	r27, r19
 b4a:	e4 07       	cpc	r30, r20
 b4c:	f5 07       	cpc	r31, r21
 b4e:	20 f0       	brcs	.+8      	; 0xb58 <__udivmodsi4_ep>
 b50:	a2 1b       	sub	r26, r18
 b52:	b3 0b       	sbc	r27, r19
 b54:	e4 0b       	sbc	r30, r20
 b56:	f5 0b       	sbc	r31, r21

00000b58 <__udivmodsi4_ep>:
 b58:	66 1f       	adc	r22, r22
 b5a:	77 1f       	adc	r23, r23
 b5c:	88 1f       	adc	r24, r24
 b5e:	99 1f       	adc	r25, r25
 b60:	1a 94       	dec	r1
 b62:	69 f7       	brne	.-38     	; 0xb3e <__udivmodsi4_loop>
 b64:	60 95       	com	r22
 b66:	70 95       	com	r23
 b68:	80 95       	com	r24
 b6a:	90 95       	com	r25
 b6c:	9b 01       	movw	r18, r22
 b6e:	ac 01       	movw	r20, r24
 b70:	bd 01       	movw	r22, r26
 b72:	cf 01       	movw	r24, r30
 b74:	08 95       	ret

00000b76 <__umulhisi3>:
 b76:	a2 9f       	mul	r26, r18
 b78:	b0 01       	movw	r22, r0
 b7a:	b3 9f       	mul	r27, r19
 b7c:	c0 01       	movw	r24, r0
 b7e:	a3 9f       	mul	r26, r19
 b80:	01 d0       	rcall	.+2      	; 0xb84 <__umulhisi3+0xe>
 b82:	b2 9f       	mul	r27, r18
 b84:	70 0d       	add	r23, r0
 b86:	81 1d       	adc	r24, r1
 b88:	11 24       	eor	r1, r1
 b8a:	91 1d       	adc	r25, r1
 b8c:	08 95       	ret

00000b8e <_exit>:
 b8e:	f8 94       	cli

00000b90 <__stop_program>:
 b90:	ff cf       	rjmp	.-2      	; 0xb90 <__stop_program>
